{"ast":null,"code":"import _objectSpread from \"/Users/karamjitsingh/Desktop/todo-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport { Container } from 'unstated';\nconst defaultState = {\n  list: [{\n    id: 1,\n    completed: false,\n    text: 'Read README'\n  }, {\n    id: 2,\n    completed: false,\n    text: 'Add one todo'\n  }, {\n    id: 3,\n    completed: false,\n    text: 'Add filters'\n  }, {\n    id: 4,\n    completed: false,\n    text: 'Add multiple lists'\n  }, {\n    id: 5,\n    completed: false,\n    text: 'Optional: add tests'\n  }]\n};\nlocalStorage.setItem('items', JSON.stringify(defaultState.lost));\n\nclass TodosContainer extends Container {\n  constructor(props) {\n    super(props);\n\n    this.toggleComplete = async id => {\n      const item = this.state.list.find(i => i.id === id);\n      const completed = !item.completed; // We're using await on setState here because this comes from unstated package, not React\n      // See: https://github.com/jamiebuilds/unstated#introducing-unstated\n\n      await this.setState(state => {\n        const list = state.list.map(item => {\n          if (item.id !== id) return item;\n          return _objectSpread({}, item, {\n            completed\n          });\n        });\n        return {\n          list\n        };\n      });\n      this.syncStorage();\n    };\n\n    this.createTodo = async text => {\n      await this.setState(state => {\n        const item = {\n          completed: false,\n          text,\n          id: state.list.length + 1\n        };\n        const list = state.list.concat(item);\n        this.setState({\n          text: ''\n        });\n        return {\n          list\n        };\n      });\n      this.syncStorage();\n    };\n\n    this.showInput = () => {\n      this.setState({\n        showInput: !this.state.showInput\n      });\n    };\n\n    this.onChangeText = e => {\n      this.setState({\n        text: e\n      });\n    };\n\n    const data = localStorage.getItem('items');\n    this.state = {\n      list: JSON.parse(data),\n      showInput: false,\n      text: '' // defaultState\n      // localStorage.setItem('items', defaultState.item);\n\n    };\n  }\n\n  syncStorage() {\n    if (window && window.localStorage) {\n      const state = JSON.stringify(this.state);\n      window.localStorage.setItem('appState', state);\n    }\n  }\n\n  getList() {\n    return this.state.list;\n  }\n\n}\n\nexport default TodosContainer;","map":{"version":3,"sources":["/Users/karamjitsingh/Desktop/todo-app/src/store.js"],"names":["Container","defaultState","list","id","completed","text","localStorage","setItem","JSON","stringify","lost","TodosContainer","constructor","props","toggleComplete","item","state","find","i","setState","map","syncStorage","createTodo","length","concat","showInput","onChangeText","e","data","getItem","parse","window","getList"],"mappings":"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","sourcesContent":["import { Container } from 'unstated'\n\nconst defaultState = {\n  list: [\n    {\n      id: 1,\n      completed: false,\n      text: 'Read README'\n    },\n    {\n      id: 2,\n      completed: false,\n      text: 'Add one todo'\n    },\n    {\n      id: 3,\n      completed: false,\n      text: 'Add filters'\n    },\n    {\n      id: 4,\n      completed: false,\n      text: 'Add multiple lists'\n    },\n    {\n      id: 5,\n      completed: false,\n      text: 'Optional: add tests'\n    }\n  ],\n \n}\nlocalStorage.setItem('items', JSON.stringify(defaultState.lost));\nclass TodosContainer extends Container {\n  constructor (props) {\n    super(props)\n    const data = localStorage.getItem('items') \n    this.state = {\n      list:  JSON.parse(data) ,\n      showInput:false, \n      text:''\n    }\n    \n    // defaultState\n    // localStorage.setItem('items', defaultState.item);\n    \n  }\n  \n  syncStorage () {\n    if (window && window.localStorage) {\n      const state = JSON.stringify(this.state)\n      window.localStorage.setItem('appState', state)\n    }\n  }\n\n  getList () {\n    return this.state.list\n  }\n\n  toggleComplete = async id => {\n    const item = this.state.list.find(i => i.id === id)\n    const completed = !item.completed\n\n    // We're using await on setState here because this comes from unstated package, not React\n    // See: https://github.com/jamiebuilds/unstated#introducing-unstated\n    await this.setState(state => {\n      const list = state.list.map(item => {\n        if (item.id !== id) return item\n        return {\n          ...item,\n          completed\n        }\n      })\n      return { list }\n    })\n\n    this.syncStorage()\n  }\n\n  createTodo = async text => {\n    await this.setState(state => {\n      const item = {\n        completed: false,\n        text,\n        id: state.list.length + 1\n      }\n      \n      const list = state.list.concat(item)\n      this.setState({text:''})\n      return { list }\n    })\n\n    this.syncStorage()\n  }\n \n  showInput = ()=> {\n    this.setState({ showInput:!this.state.showInput})\n  }\n  \n  onChangeText = (e)=> {\n    this.setState({ text:e})\n  }\n}\n\nexport default TodosContainer\n"]},"metadata":{},"sourceType":"module"}