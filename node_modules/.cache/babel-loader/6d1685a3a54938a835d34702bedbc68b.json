{"ast":null,"code":"import _taggedTemplateLiteral from \"/Users/karamjitsingh/Desktop/todo-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/karamjitsingh/Desktop/todo-app/src/components/TodoItem.js\";\n\nfunction _templateObject2() {\n  const data = _taggedTemplateLiteral([\"\\n  text-decoration: \", \";\\n\"]);\n\n  _templateObject2 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n  font-size: 24px;\\n  cursor: pointer;\\n  margin-right:16px\\n\"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Card from 'react-bootstrap/Card';\nimport styled from 'styled-components';\n\nconst TodoItem = ({\n  text,\n  completed,\n  onComplete\n}) => React.createElement(Wrapper, {\n  onClick: onComplete,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 7\n  },\n  __self: this\n}, React.createElement(Card, {\n  style: {\n    width: '20rem'\n  },\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 11\n  },\n  __self: this\n}, React.createElement(Card.Body, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 12\n  },\n  __self: this\n}, React.createElement(Card.Title, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 13\n  },\n  __self: this\n}, \"Card Title\"), React.createElement(Button, {\n  variant: \"success\",\n  size: \"sm\",\n  style: {\n    width: 90\n  },\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 15\n  },\n  __self: this\n}, \"Complete\"), React.createElement(Button, {\n  variant: \"danger\",\n  size: \"sm\",\n  style: {\n    width: 160,\n    marginLeft: 20\n  },\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 16\n  },\n  __self: this\n}, \"Work in Progress\"))));\n\nconst Wrapper = styled.p(_templateObject());\nconst Text = styled.span(_templateObject2(), props => props.completed ? 'line-through' : 'none');\nexport default TodoItem;","map":{"version":3,"sources":["/Users/karamjitsingh/Desktop/todo-app/src/components/TodoItem.js"],"names":["React","Button","Card","styled","TodoItem","text","completed","onComplete","width","marginLeft","Wrapper","p","Text","span","props"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,OAAOC,IAAP,MAAiB,sBAAjB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;;AAEA,MAAMC,QAAQ,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA,SAAR;AAAmBC,EAAAA;AAAnB,CAAD,KACf,oBAAC,OAAD;AAAS,EAAA,OAAO,EAAEA,UAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAIE,oBAAC,IAAD;AAAM,EAAA,KAAK,EAAE;AAAEC,IAAAA,KAAK,EAAE;AAAT,GAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACF,oBAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAGE,oBAAC,MAAD;AAAQ,EAAA,OAAO,EAAC,SAAhB;AAA0B,EAAA,IAAI,EAAC,IAA/B;AAAoC,EAAA,KAAK,EAAE;AAACA,IAAAA,KAAK,EAAC;AAAP,GAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF,EAIE,oBAAC,MAAD;AAAQ,EAAA,OAAO,EAAC,QAAhB;AAAyB,EAAA,IAAI,EAAC,IAA9B;AAAmC,EAAA,KAAK,EAAE;AAACA,IAAAA,KAAK,EAAC,GAAP;AAAYC,IAAAA,UAAU,EAAC;AAAvB,GAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAJF,CADE,CAJF,CADF;;AAgBA,MAAMC,OAAO,GAAGP,MAAM,CAACQ,CAAV,mBAAb;AAMA,MAAMC,IAAI,GAAGT,MAAM,CAACU,IAAV,qBACWC,KAAK,IAAKA,KAAK,CAACR,SAAN,GAAkB,cAAlB,GAAmC,MADxD,CAAV;AAIA,eAAeF,QAAf","sourcesContent":["import React from 'react'\nimport Button from 'react-bootstrap/Button';\nimport Card from 'react-bootstrap/Card';\nimport styled from 'styled-components'\n\nconst TodoItem = ({ text, completed, onComplete }) => (\n  <Wrapper onClick={onComplete}>\n    {/* <code>\n      [{completed ? 'x' : '  '}] <Text completed={completed}>{text}</Text>\n    </code> */}\n    <Card style={{ width: '20rem' }}>\n  <Card.Body>\n    <Card.Title>Card Title</Card.Title>\n\n    <Button variant=\"success\" size=\"sm\" style={{width:90}} >Complete</Button>\n    <Button variant=\"danger\" size=\"sm\" style={{width:160, marginLeft:20}} >Work in Progress</Button>\n  </Card.Body>\n</Card>\n  </Wrapper>\n)\n\nconst Wrapper = styled.p`\n  font-size: 24px;\n  cursor: pointer;\n  margin-right:16px\n`\n\nconst Text = styled.span`\n  text-decoration: ${props => (props.completed ? 'line-through' : 'none')};\n`\n\nexport default TodoItem\n"]},"metadata":{},"sourceType":"module"}