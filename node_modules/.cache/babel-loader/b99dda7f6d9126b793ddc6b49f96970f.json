{"ast":null,"code":"import _objectSpread from \"/Users/karamjitsingh/Desktop/todo-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport { Container } from 'unstated';\nconst defaultState = {\n  list: [{\n    id: 1,\n    completed: false,\n    text: 'Read README'\n  }, {\n    id: 2,\n    completed: false,\n    text: 'Add one todo'\n  }, {\n    id: 3,\n    completed: false,\n    text: 'Add filters'\n  }, {\n    id: 4,\n    completed: false,\n    text: 'Add multiple lists'\n  }, {\n    id: 5,\n    completed: false,\n    text: 'Optional: add tests'\n  }]\n};\nconst data = localStorage.setItem('items', JSON.stringify(defaultState.lost));\n\nclass TodosContainer extends Container {\n  constructor(props) {\n    super(props);\n\n    this.toggleComplete = async id => {\n      const item = this.state.list.find(i => i.id === id);\n      const completed = !item.completed; // We're using await on setState here because this comes from unstated package, not React\n      // See: https://github.com/jamiebuilds/unstated#introducing-unstated\n\n      await this.setState(state => {\n        const list = state.list.map(item => {\n          if (item.id !== id) return item;\n          return _objectSpread({}, item, {\n            completed\n          });\n        });\n        return {\n          list\n        };\n      });\n      this.syncStorage();\n    };\n\n    this.createTodo = async text => {\n      await this.setState(state => {\n        const item = {\n          completed: false,\n          text,\n          id: state.list.length + 1\n        };\n        const list = state.list.concat(item);\n        this.setState({\n          text: ''\n        });\n        return {\n          list\n        };\n      });\n      this.syncStorage();\n    };\n\n    this.showInput = () => {\n      this.setState({\n        showInput: !this.state.showInput\n      });\n    };\n\n    this.onChangeText = e => {\n      this.setState({\n        text: e\n      });\n      this.syncStorage();\n    };\n\n    this.state = {\n      list: localStorage.getItem('items', JSON.parse(data)),\n      showInput: false,\n      text: '' // defaultState\n      // localStorage.setItem('items', defaultState.item);\n\n    };\n  }\n\n  syncStorage() {\n    if (window && window.localStorage) {\n      const state = JSON.stringify(this.state);\n      window.localStorage.setItem('appState', state);\n    }\n  }\n\n  getList() {\n    return this.state.list;\n  }\n\n}\n\nexport default TodosContainer;","map":{"version":3,"sources":["/Users/karamjitsingh/Desktop/todo-app/src/store.js"],"names":["Container","defaultState","list","id","completed","text","data","localStorage","setItem","JSON","stringify","lost","TodosContainer","constructor","props","toggleComplete","item","state","find","i","setState","map","syncStorage","createTodo","length","concat","showInput","onChangeText","e","getItem","parse","window","getList"],"mappings":"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","sourcesContent":["import { Container } from 'unstated'\n\nconst defaultState = {\n  list: [\n    {\n      id: 1,\n      completed: false,\n      text: 'Read README'\n    },\n    {\n      id: 2,\n      completed: false,\n      text: 'Add one todo'\n    },\n    {\n      id: 3,\n      completed: false,\n      text: 'Add filters'\n    },\n    {\n      id: 4,\n      completed: false,\n      text: 'Add multiple lists'\n    },\n    {\n      id: 5,\n      completed: false,\n      text: 'Optional: add tests'\n    }\n  ],\n \n}\nconst data = localStorage.setItem('items', JSON.stringify(defaultState.lost));\nclass TodosContainer extends Container {\n  constructor (props) {\n    super(props)\n    this.state = {\n      list: localStorage.getItem('items', JSON.parse(data)) ,\n      showInput:false, \n      text:''\n    }\n    \n    // defaultState\n    // localStorage.setItem('items', defaultState.item);\n    \n  }\n  \n  syncStorage () {\n    if (window && window.localStorage) {\n      const state = JSON.stringify(this.state)\n      window.localStorage.setItem('appState', state)\n    }\n  }\n\n  getList () {\n    return this.state.list\n  }\n\n  toggleComplete = async id => {\n    const item = this.state.list.find(i => i.id === id)\n    const completed = !item.completed\n\n    // We're using await on setState here because this comes from unstated package, not React\n    // See: https://github.com/jamiebuilds/unstated#introducing-unstated\n    await this.setState(state => {\n      const list = state.list.map(item => {\n        if (item.id !== id) return item\n        return {\n          ...item,\n          completed\n        }\n      })\n      return { list }\n    })\n\n    this.syncStorage()\n  }\n\n  createTodo = async text => {\n    await this.setState(state => {\n      const item = {\n        completed: false,\n        text,\n        id: state.list.length + 1\n      }\n      \n      const list = state.list.concat(item)\n      this.setState({text:''})\n      return { list }\n    })\n\n    this.syncStorage()\n  }\n \n  showInput = ()=> {\n    this.setState({ showInput:!this.state.showInput})\n\n  }\n  \n  onChangeText = (e)=> {\n    this.setState({ text:e})\n    this.syncStorage()\n  }\n}\n\nexport default TodosContainer\n"]},"metadata":{},"sourceType":"module"}