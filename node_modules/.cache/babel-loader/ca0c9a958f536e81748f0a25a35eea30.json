{"ast":null,"code":"import _objectSpread from \"/Users/karamjitsingh/Desktop/todo-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport { Container } from 'unstated';\nconst defaultState = {\n  list: [{\n    id: 1,\n    completed: false,\n    inprogress: true,\n    text: 'Read README'\n  }, {\n    id: 2,\n    completed: false,\n    inprogress: true,\n    text: 'Add one todo'\n  }, {\n    id: 3,\n    completed: false,\n    inprogress: true,\n    text: 'Add filters'\n  }, {\n    id: 4,\n    completed: false,\n    inprogress: true,\n    text: 'Add multiple lists'\n  }, {\n    id: 5,\n    completed: false,\n    inprogress: true,\n    text: 'Optional: add tests'\n  }]\n};\n\nclass TodosContainer extends Container {\n  constructor(props) {\n    super(props);\n\n    this.syncProgressList = () => {\n      localStorage.setItem('showProgresslist', JSON.stringify(true));\n      localStorage.setItem('showCompleteList', JSON.stringify(false));\n    };\n\n    this.syncCompleteList = () => {\n      localStorage.setItem('showProgresslist', JSON.stringify(false));\n      localStorage.setItem('showCompleteList', JSON.stringify(true));\n    };\n\n    this.onProgressList = () => {\n      this.syncProgressList();\n      this.setState({\n        showProgresslist: true,\n        showcompletelist: false\n      });\n    };\n\n    this.onCompleteList = () => {\n      this.syncCompleteList();\n      this.setState({\n        showcompletelist: true,\n        showProgresslist: false\n      });\n    };\n\n    this.toggleComplete = async id => {\n      const item = this.state.list.find(i => i.id === id);\n      const completed = !item.completed;\n      const inprogress = false;\n      const list = this.state.list.map(item => {\n        if (item.id !== id) return item;\n        return _objectSpread({}, item, {\n          completed,\n          inprogress\n        });\n      });\n      this.setState({\n        list: list\n      });\n      this.syncStorage(list);\n    };\n\n    this.createTodo = async text => {\n      const item = {\n        completed: false,\n        inprogress: true,\n        text,\n        id: this.state.list.length + 1\n      };\n      const dataId = this.state.list;\n      const list = dataId.map((data, index) => {\n        return data, item;\n      });\n      console.log('list', list); // this.setState({text:''})\n      // this.syncStorage(list)\n    };\n\n    this.showInput = () => {\n      localStorage.setItem('showProgresslist', JSON.stringify(false));\n      localStorage.setItem('showCompleteList', JSON.stringify(false));\n      this.setState({\n        showInput: !this.state.showInput\n      });\n    };\n\n    this.onChangeText = e => {\n      this.setState({\n        text: e\n      });\n    };\n\n    this.onProgress = async id => {\n      const item = this.state.list.find(i => i.id === id);\n      const inprogress = true;\n      const completed = false; // We're using await on setState here because this comes from unstated package, not React\n      // See: https://github.com/jamiebuilds/unstated#introducing-unstated\n\n      const list = this.state.list.map(item => {\n        if (item.id !== id) return item;\n        return _objectSpread({}, item, {\n          inprogress,\n          completed\n        });\n      });\n      this.setState({\n        list: list\n      });\n      this.syncStorage(list);\n    };\n\n    !localStorage.getItem('items') && localStorage.setItem('items', JSON.stringify(defaultState.list));\n\n    const _data = localStorage.getItem('items');\n\n    this.state = {\n      list: JSON.parse(_data),\n      showInput: false,\n      text: '',\n      showProgresslist: false,\n      showcompletelist: false\n    };\n  }\n\n  syncStorage(list) {\n    console.log(list, 'list');\n    localStorage.setItem('items', JSON.stringify(list));\n  }\n\n  getList() {\n    return this.state.list;\n  }\n\n}\n\nexport default TodosContainer;","map":{"version":3,"sources":["/Users/karamjitsingh/Desktop/todo-app/src/store.js"],"names":["Container","defaultState","list","id","completed","inprogress","text","TodosContainer","constructor","props","syncProgressList","localStorage","setItem","JSON","stringify","syncCompleteList","onProgressList","setState","showProgresslist","showcompletelist","onCompleteList","toggleComplete","item","state","find","i","map","syncStorage","createTodo","length","dataId","data","index","console","log","showInput","onChangeText","e","onProgress","getItem","parse","getList"],"mappings":"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","sourcesContent":["import { Container } from 'unstated'\n\nconst defaultState = {\n  list: [\n    {\n      id: 1,\n      completed: false,\n      inprogress:true,\n      text: 'Read README'\n    },\n    {\n      id: 2,\n      completed: false,\n      inprogress:true,\n      text: 'Add one todo'\n    },\n    {\n      id: 3,\n      completed: false,\n      inprogress:true,\n      text: 'Add filters'\n    },\n    {\n      id: 4,\n      completed: false,\n      inprogress:true,\n      text: 'Add multiple lists'\n    },\n    {\n      id: 5,\n      completed: false,\n      inprogress:true,\n      text: 'Optional: add tests'\n    }\n  ],\n \n}\n\nclass TodosContainer extends Container {\n  constructor (props) {\n    super(props)\n    !localStorage.getItem('items')&&localStorage.setItem('items', JSON.stringify(defaultState.list))\n    const data = localStorage.getItem('items') \n    this.state = {\n      list:  JSON.parse(data),\n      showInput:false, \n      text:'',\n      showProgresslist:false,\n      showcompletelist:false,\n    }    \n  }\n  \n  syncStorage (list) {\n    console.log(list,'list')\n    localStorage.setItem('items', JSON.stringify(list));\n  }\n\n  getList () {\n    return this.state.list\n  }\n\n  syncProgressList = () => {\n    localStorage.setItem('showProgresslist', JSON.stringify(true));\n    localStorage.setItem('showCompleteList', JSON.stringify(false));\n  }\n  syncCompleteList = () =>{\n    localStorage.setItem('showProgresslist', JSON.stringify(false));\n    localStorage.setItem('showCompleteList', JSON.stringify(true));\n  }\n  onProgressList = () => {\n    this.syncProgressList() \n    this.setState({showProgresslist:true, showcompletelist:false})\n }\n \n onCompleteList = () => {\n  this.syncCompleteList() \n  this.setState({showcompletelist:true, showProgresslist:false})\n }\n\n  toggleComplete = async id => {\n    const item = this.state.list.find(i => i.id === id)\n    const completed = !item.completed\n    const inprogress = false   \n      const list = this.state.list.map(item => {\n        if (item.id !== id) return item\n        return {\n          ...item,\n          completed,\n          inprogress\n        }\n    })\n    this.setState({list:list})\n    this.syncStorage(list)   \n  }\n\n  createTodo = async text => {\n      const item = {\n        completed: false,\n        inprogress:true,\n        text,\n        id: this.state.list.length + 1\n      }\n      const dataId = this.state.list\n      const list = dataId.map((data,index)=> {\n        return(\n          data,\n          item\n        )\n      });\n      console.log('list',list)\n      // this.setState({text:''})\n\n      // this.syncStorage(list)\n  }\n \n  showInput = ()=> {\n    localStorage.setItem('showProgresslist', JSON.stringify(false));\n    localStorage.setItem('showCompleteList', JSON.stringify(false));\n    this.setState({ showInput:!this.state.showInput})\n  }\n  \n  onChangeText = (e)=> {\n    this.setState({ text:e})\n  }\n\n  onProgress = async id => {\n    const item = this.state.list.find(i => i.id === id)\n    const inprogress = true\n    const completed = false\n    // We're using await on setState here because this comes from unstated package, not React\n    // See: https://github.com/jamiebuilds/unstated#introducing-unstated\n   \n      const list = this.state.list.map(item => {\n        if (item.id !== id) return item\n        return {\n          ...item,\n          inprogress,\n          completed\n        }\n    })\n    this.setState({list:list})\n    this.syncStorage(list)   \n  }\n}\n\nexport default TodosContainer\n"]},"metadata":{},"sourceType":"module"}