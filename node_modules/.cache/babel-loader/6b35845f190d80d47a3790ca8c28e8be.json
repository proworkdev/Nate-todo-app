{"ast":null,"code":"import _objectSpread from \"/Users/karamjitsingh/Desktop/todo-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport { Container } from 'unstated';\nconst defaultState = {\n  list: [{\n    id: 1,\n    completed: false,\n    text: 'Read README'\n  }, {\n    id: 2,\n    completed: false,\n    text: 'Add one todo'\n  }, {\n    id: 3,\n    completed: false,\n    text: 'Add filters'\n  }, {\n    id: 4,\n    completed: false,\n    text: 'Add multiple lists'\n  }, {\n    id: 5,\n    completed: false,\n    text: 'Optional: add tests'\n  }]\n};\n\nclass TodosContainer extends Container {\n  constructor(props) {\n    localStorage.setItem('items', JSON.stringify(defaultState.list));\n    super(props);\n\n    this.toggleComplete = async id => {\n      const item = this.state.list.find(i => i.id === id);\n      const completed = !item.completed; // We're using await on setState here because this comes from unstated package, not React\n      // See: https://github.com/jamiebuilds/unstated#introducing-unstated\n\n      await this.setState(state => {\n        const list = state.list.map(item => {\n          if (item.id !== id) return item;\n          return _objectSpread({}, item, {\n            completed\n          });\n        });\n        this.syncStorage(li);\n      });\n    };\n\n    this.createTodo = async text => {\n      await this.setState(state => {\n        const item = {\n          completed: false,\n          text,\n          id: state.list.length + 1\n        };\n        const list = state.list.concat(item);\n        this.setState({\n          text: ''\n        });\n        this.syncStorage();\n        return {\n          list\n        };\n      });\n    };\n\n    this.showInput = () => {\n      this.setState({\n        showInput: !this.state.showInput\n      });\n    };\n\n    this.onChangeText = e => {\n      this.setState({\n        text: e\n      });\n    };\n\n    const data = localStorage.getItem('items');\n    this.state = {\n      list: JSON.parse(data),\n      showInput: false,\n      text: ''\n    };\n  }\n\n  syncStorage() {\n    localStorage.setItem('items', JSON.stringify(this.state.list));\n  }\n\n  getList() {\n    return this.state.list;\n  }\n\n}\n\nexport default TodosContainer;","map":{"version":3,"sources":["/Users/karamjitsingh/Desktop/todo-app/src/store.js"],"names":["Container","defaultState","list","id","completed","text","TodosContainer","constructor","props","localStorage","setItem","JSON","stringify","toggleComplete","item","state","find","i","setState","map","syncStorage","li","createTodo","length","concat","showInput","onChangeText","e","data","getItem","parse","getList"],"mappings":"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","sourcesContent":["import { Container } from 'unstated'\n\nconst defaultState = {\n  list: [\n    {\n      id: 1,\n      completed: false,\n      text: 'Read README'\n    },\n    {\n      id: 2,\n      completed: false,\n      text: 'Add one todo'\n    },\n    {\n      id: 3,\n      completed: false,\n      text: 'Add filters'\n    },\n    {\n      id: 4,\n      completed: false,\n      text: 'Add multiple lists'\n    },\n    {\n      id: 5,\n      completed: false,\n      text: 'Optional: add tests'\n    }\n  ],\n \n}\n\nclass TodosContainer extends Container {\n  constructor (props) {\n    localStorage.setItem('items', JSON.stringify(defaultState.list));\n    super(props)\n    const data = localStorage.getItem('items') \n    this.state = {\n      list: JSON.parse(data) ,\n      showInput:false, \n      text:''\n    }    \n  }\n  \n  syncStorage () {\n    localStorage.setItem('items', JSON.stringify(this.state.list));\n  }\n\n  getList () {\n    return this.state.list\n  }\n\n  toggleComplete = async id => {\n    const item = this.state.list.find(i => i.id === id)\n    const completed = !item.completed\n\n    // We're using await on setState here because this comes from unstated package, not React\n    // See: https://github.com/jamiebuilds/unstated#introducing-unstated\n    await this.setState(state => {\n      const list = state.list.map(item => {\n        if (item.id !== id) return item\n        return {\n          ...item,\n          completed\n        }\n      })\n       this.syncStorage(li)\n      \n    })\n\n   \n  }\n\n  createTodo = async text => {\n    await this.setState(state => {\n      const item = {\n        completed: false,\n        text,\n        id: state.list.length + 1\n      }\n      \n      const list = state.list.concat(item)\n      this.setState({text:''})\n\n      this.syncStorage()\n      return { list }\n    })\n\n   \n  }\n \n  showInput = ()=> {\n    this.setState({ showInput:!this.state.showInput})\n  }\n  \n  onChangeText = (e)=> {\n    this.setState({ text:e})\n  }\n}\n\nexport default TodosContainer\n"]},"metadata":{},"sourceType":"module"}